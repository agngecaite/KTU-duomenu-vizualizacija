library(shiny)
library(shinydashboard)
library(tidyverse)
library(readr)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectizeInput(inputId="imones_kodas", label="Imones kodas",
choices=NULL, selected=NULL )
),
mainPanel(tabsetPanel(
tabPanel("grafikas", plotOutput("plot")),
tabPanel("lentele", tableOutput("table"))
)
)
)
)
server <- function(input, output, session){
data <- read_csv("../data/lab_sodra.csv")
updateSelectizeInput(session, "imones_kodas",
choices=data1$name,
server=TRUE)
output$table <- renderTable(
data1 %>%
filter(name==input$imones_kodas), digits=0
)
output$plot <- renderPlot(
data1%>%
filter(name==input$imones_kodas) %>%
ggplot(aes(x=month, y=avgWage)) +
theme_minimal() +
geom_point()+
geom_line(colour='blue')
)
}
shinyApp(ui, server)
library(shiny)
library(shinydashboard)
library(tidyverse)
library(readr)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectizeInput(inputId="imones_kodas", label="Imones kodas",
choices=NULL, selected=NULL )
),
mainPanel(tabsetPanel(
tabPanel("grafikas", plotOutput("plot")),
tabPanel("lentele", tableOutput("table"))
)
)
)
)
server <- function(input, output, session){
data <- read_csv("../data/lab_sodra.csv")
updateSelectizeInput(session, "imones_kodas",
choices=data1$name,
server=TRUE)
output$table <- renderTable(
data1 %>%
filter(name==input$imones_kodas), digits=0
)
output$plot <- renderPlot(
data1%>%
filter(name==input$imones_kodas) %>%
ggplot(aes(x=month, y=avgWage)) +
theme_minimal() +
geom_point()+
geom_line(colour='blue')
)
}
shinyApp(ui, server)
output$plot <- renderPlot(
data1%>%
filter(name==input$imones_kodas) %>%
ggplot(aes(x=month, y=avgWage)) +
theme_minimal() +
geom_point()+
geom_line(colour='blue')
)
install.packages("shiny")
install.packages("shinydashboard")
library(shiny)
library(shinydashboard)
library(tidyverse)
library(readr)
ui <- fluidPage(
sidebarLayout(
sidebarPanel(
selectizeInput(inputId="imones_kodas", label="Imones kodas",
choices=NULL, selected=NULL )
),
mainPanel(tabsetPanel(
tabPanel("grafikas", plotOutput("plot")),
tabPanel("lentele", tableOutput("table"))
)
)
)
)
server <- function(input, output, session){
data <- read_csv("../data/lab_sodra.csv")
updateSelectizeInput(session, "imones_kodas",
choices=data1$name,
server=TRUE)
output$table <- renderTable(
data1 %>%
filter(name==input$imones_kodas), digits=0
)
output$plot <- renderPlot(
data1%>%
filter(name==input$imones_kodas) %>%
ggplot(aes(x=month, y=avgWage)) +
theme_minimal() +
geom_point()+
geom_line(colour='blue')
)
}
shinyApp(ui, server)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data1 %>%
ggplot(aes(x=avgWage))+
theme_minimal()+
geom_histogram(bins=100)
data <- read_csv("../data/lab_sodra.csv")
summary(data)
#1 uzd
data1 <- data %>%
filter(ecoActCode==702200)
data1 %>%
ggplot(aes(x=avgWage))+
theme_minimal()+
geom_histogram(bins=100)
View(data1)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
data <- read_csv("../data/lab_sodra.csv")
summary(data)
#1 uzd
#atfiltruoja duomenu faila
data1 <- data %>%
filter(ecoActCode == 702200)
#grafikas
data1 %>%
ggplot(aes(x=avgWage)) +
theme_minimal() +
geom_histogram(fill = "red", col = "black", bins = 100) +
labs(title = "Awerage wage of employees")
View(data1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readr)
library(tidyverse)
data <- read_csv("../data/lab_sodra.csv")
summary(data)
#1 uzd
#atfiltruoja duomenu faila
data1 <- data %>%
filter(ecoActCode == 702200)
#grafikas
data1 %>%
ggplot(aes(x=avgWage)) +
theme_minimal() +
geom_histogram(fill = "red", col = "black", bins = 100) +
labs(title = "Awerage wage of employees")
#2 uzd
#isskiria menesi is datos
data1 <- data1 %>% mutate(month_value=as.integer(substr(month, 5 ,7)))
#apskaiciuoja vidutini imones metu atlyginima
data2 <- data1 %>%
group_by(name) %>%
summarise(avg = mean(avgWage)) %>%
arrange(desc(avg))
#apjungia abu duomenu failus
data3 <- merge(data1, data2)
#grafikas
data3 %>%
arrange(desc(avg)) %>%
head(60) %>%
ggplot(aes(x = month_value, y = avgWage, group = name)) +
theme_minimal() +
geom_point(aes(colour = name)) +
scale_x_continuous("month",breaks=1:12,limits=c(1,12)) +
geom_line(aes(colour = name)) +
labs(title = "Average wage of employees", x = "Month", y = "Average wage")
#3 uzd
#grafikas
data3 %>%
arrange(desc(avg)) %>%
head(60) %>%
group_by(name) %>%
slice_max(numInsured, with_ties = FALSE) %>%
head(5) %>%
ggplot(aes(x = reorder(name, -numInsured), y = numInsured)) +
geom_col(aes(fill = name)) +
theme(axis.text.x = element_blank()) +
theme_minimal() +
labs(title = "Number of insured employees", x = "Company", y = "Count")
#3 uzd
#grafikas
data3 %>%
arrange(desc(avg)) %>%
head(60) %>%
group_by(name) %>%
slice_max(numInsured, with_ties = FALSE) %>%
head(5) %>%
ggplot(aes(x = reorder(name, -numInsured), y = numInsured)) +
geom_col(aes(fill = name)) +
theme(axis.text.x = element_blank()) +
theme_minimal() +
labs(title = "Number of insured employees", x = "Company", y = "Count")
data3 %>%
arrange(desc(avg)) %>%
head(60) %>%
ggplot(aes(x = month_value, y = avgWage, group = name)) +
theme_minimal() +
geom_point(aes(colour = name)) +
scale_x_continuous("month",breaks=1:12,limits=c(1,12)) +
geom_line(aes(colour = name)) +
labs(title = "Average wage of employees", x = "Month", y = "Average wage")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data1)
shiny::runApp()
runApp()
runApp()
